# -*- coding: utf-8 -*-
"""ItemBasedFiltering.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Na4bsB2VGkUpKhAokKeuYj_NSmcOf6_O
"""

import pandas as pd
from scipy.spatial.distance import cosine

!pip install -U -q PyDrive
from pydrive.auth import GoogleAuth
from pydrive.drive import GoogleDrive
from google.colab import auth
from oauth2client.client import GoogleCredentials

auth.authenticate_user()
gauth = GoogleAuth()
gauth.credentials = GoogleCredentials.get_application_default()
drive = GoogleDrive(gauth)

downloaded = drive.CreateFile({'id':'17-z9mJQz5oRR5UT6cdJF7j8DErK1chwb'}) # replace the id with id of file you want to access
downloaded.GetContentFile('data.csv')

data = pd.read_csv('data.csv')

data.head()



"""Item Based Filtering:"""

data_germany = data.drop('user', 1)

data_ibs = pd.DataFrame(index=data_germany.columns,columns=data_germany.columns)

print(data_germany.ix[1])
print(cosine(data_germany.ix[0],data_germany.ix[0]))

# Lets fill in those empty spaces with cosine similarities
# Loop through the columns
for i in range(0,len(data_ibs.columns)) :
    # Loop through the columns for each column
    for j in range(0,len(data_ibs.columns)) :
      # Fill in placeholder with cosine similarities
      data_ibs.ix[i,j] = 1-cosine(data_germany.ix[:,i],data_germany.ix[:,j])

"""Cosine Similarities:"""

data_ibs.head()
print(max(data_ibs.iloc[0][1:]))#max(data_ibs[0])

# Create a placeholder items for closes neighbours to an item
data_neighbours = pd.DataFrame(index=data_ibs.columns,columns=range(1,11))
 
# Loop through our similarity dataframe and fill in neighbouring item names
for i in range(0,len(data_ibs.columns)):
    data_neighbours.ix[i,:10] = data_ibs.ix[0:,i].sort_values(ascending=False)[:10].index
 
# --- End Item Based Recommendations --- #

data_neighbours.head(6)

